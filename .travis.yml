# Travis CI Configuration
# https://docs.travis-ci.com
# This file is in YAML data serialization language.
# http://yaml.org/
# This file is based on Configuration Templates for Travis CI
# https://github.com/Lin-Buo-Ren/Configuration-Templates-for-Travis-CI
# Copyright 2020 林博仁(Buo-ren, Lin) <Buo.Ren.Lin@gmail.com>
# SPDX-License-Identifier: CC-BY-SA-4.0

## Project-specific settings
### Main language used in the project
### https://docs.travis-ci.com/user/languages
language: yaml

### Git related settings
git:
  # You may limit the depth of history cloned by Travis CI if you don't depend on it(default: 50)
  # You may also remove the depth limitation entirely by setting the `depth` key to `false
  # https://docs.travis-ci.com/user/customizing-the-build/#Git-Clone-Depth
  depth: 3
  # Travis CI clones git submodules recursively by default
  # https://docs.travis-ci.com/user/customizing-the-build/#Git-Submodules
  #submodules: false
  # Whether to download Git Large File Storage assets
  # https://docs.travis-ci.com/user/customizing-the-build/#Git-LFS-Skip-Smudge
  lfs_skip_smudge: false

### Limit Git branches to be include in continuous integration, by default all branches with the .travis.yml file will be included
### https://docs.travis-ci.com/user/customizing-the-build/#Building-Specific-Branches
#branches:
  # Black-listing approach
  #except:
    #- no-ci

## Build Environment Specification
### Whether to use faster container build(false) or flexible VM build(required)
### NOTE: `sudo` is not available in container build!
sudo: false

### Selection of ubuntu release for build environment
dist: trusty

### Services pre-installed in the CI environment to start up
### https://docs.travis-ci.com/user/database-setup/#Starting-Services
#services:
  #- mysql

## The Build Lifecycle
## https://docs.travis-ci.com/user/customizing-the-build/#The-Build-Lifecycle
## NOTE: Enable each phases by removing the `true` command after each key's colon

### Addons
#addons:
  # apt_packages addon allows container build to install limited software sources and packages in the following whitelists to the system using APT:
  # https://github.com/travis-ci/apt-source-whitelist
  # https://github.com/travis-ci/apt-package-whitelist
  #apt:
    # Software sources to be added
    # https://github.com/travis-ci/apt-source-whitelist
    #sources:
      #- ubuntu-toolchain-r-test

    # Software packages to be installed
    #packages:
      #- libpng12-dev

  # Hostname can be customized via hosts addon
  # https://docs.travis-ci.com/user/customizing-the-build/#Custom-Hostnames
  #hosts: true
    #- mysite.com

### You can run custom commands before the installation step
before_install: true
  # Configure any third-party software sources(requires VM build environment)
  #- sudo add-apt-repository universe
  #- sudo add-apt-repository ppa:libreoffice/ppa

  # Update package cache if package installing is required(requires VM build environment)
  # https://docs.travis-ci.com/user/installing-dependencies/#Installing-Packages-from-a-custom-APT-repository
  #- sudo apt-get -qq update

### Install/Setup any required dependencies used in continuous integration
### https://docs.travis-ci.com/user/installing-dependencies/
install:
  - pip install --user pre-commit

### You can run custom commands before the script/build step
before_script:
  - git diff-tree -z --no-commit-id --name-only -r HEAD | xargs --null pre-commit run --files

### Put your build scripts here
script: true
  #- ./build

### You can remove files that are not needed for caching here
before_cache: true
  #- rm $HOME/.cabal/logs/build.log

### Caches non-variating contents to speed up build
cache:
  pip: true
  #directories:
  #- $HOME/.cabal

### Commands if build phase fails
after_failure: true

### Commands if build phase successes
after_success: true

### You can run custom commands before the deploy step
before_deploy: true

### Software deployment phase
### https://docs.travis-ci.com/user/deployment/
#deploy:
  #- provider: undefined
    #on:
      #branch: master
      #tags: true
  #- provider: undefined
    #on:
      #branch: master
      #tags: true

### You can run custom commands after the deploy step
after_deploy: true

### You can run custom commands after everything is done
after_script: true
